{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "webAppName": {
            "type": "string",
            "defaultValue": "[concat('webApp-', uniqueString(resourceGroup().id))]",
            "minLength": 2,
            "metadata": {
                "description": "Web app name."
            }
        },
        "appServicePlanName": {
            "type": "string",
            "defaultValue": "[concat('appServicePlan-', uniqueString(resourceGroup().id))]",
            "minLength": 2,
            "metadata": {
                "description": "Web app name."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "B2",
            "metadata": {
                "description": "The SKU of App Service Plan."
            }
        },
        "image": {
            "type": "string",
            "metadata": {
                "description": "The full image name."
            }
        },
        "imageIsPublic": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Is the image hosted on a public registry"
            }
        },
        "dockerRegsitryUrl": {
            "type": "string",
            "metadata": {
                "description": "The URL of docker registry. Only required if image is not hosted on a public registry (imageIsPublic is false)"
            }
        },
        "dockerRegistryUser": {
            "type": "string",
            "metadata": {
                "description": "The user name for docker registry. Only required if image is not hosted on a public registry (imageIsPublic is false)"
            }
        },
        "dockerRegistryPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The user password for docker registry. Only required if image is not hosted on a public registry (imageIsPublic is false)"
            }
        },
        "ipRestriction": {
            "type": "string",
            "defaultValue": "any",
             "metadata": {
                "description": "Optional IP range to restrict access to. Must be a full CIDR address (include /32 for public internet address)"
            }
        }
    },
    "variables": {
        "linuxFxVersion": "[concat('DOCKER|', parameters('image'))]",
        "appSettingsPrivateRegistry": [
                        {
                            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                            "value": "[parameters('dockerRegistryUser')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "[parameters('dockerRegsitryUrl')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                            "value": "[parameters('dockerRegistryPassword')]"
                        }
                    ],
        "appSettings":   "[if(equals(parameters('imageIsPublic'), 'true'), '[]', variables('appSettingsPrivateRegistry'))]"
        
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[parameters('appServicePlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]"
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[parameters('webAppName')]",
            "location": "[parameters('location')]",

            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "httpsOnly": true,
                "siteConfig": {
                    "linuxFxVersion": "[variables('linuxFxVersion')]",
                    "httpLoggingEnabled": true,
                    "detailedErrorLoggingEnabled": true,
                    "ftpsState": "FtpsOnly",
                    "clientAffinityEnabled": false,
                    "alwaysOn": true,
                    "appSettings": "[variables('appSettings')]",
                    "ipSecurityRestrictions": [
                            {
                                "ipAddress": "[parameters('ipRestriction')]",
                                "action": "Allow",
                                "priority": 100,
                                "name": "Front-end allow rule"
                            }
                            ]
                },
                "resources": [
                    {
                        "apiVersion": "2015-08-01",
                        "name": "logs",
                        "type": "config",
                        "dependsOn": [
                            "[resourceId('Microsoft.Web/Sites', parameters('webAppName'))]"
                        ],
                        "properties": {
                            "applicationLogs": {
                                "fileSystem": {
                                    "level": "Verbose"
                                }
                            },
                            "httpLogs": {
                                "fileSystem": {
                                    "retentionInMb": 100,
                                    "retentionInDays": 90,
                                    "enabled": true
                                }
                            },
                            "failedRequestsTracing": {
                                "enabled": true
                            },
                            "detailedErrorMessages": {
                                "enabled": true
                            }
                        }
                    }
                ]
            }
        }
    ]
}