# Presidio Release: Push to Github Releases, pypi, and to ACR twice (with verison, latest) with 'public' tag for MCR release.

trigger: none
pr: none

variables:
  - group: Presidio-V2-CI
stages:
  - stage: Release
    displayName: Release
    jobs:
    - job: version
      displayName: 'Get the version number'
      steps:
        - bash: |
            set -eux  # exit on error
            ver=$(cat VERSION)
            echo $ver
            echo "##vso[task.setvariable variable=version;isOutput=true]$ver"
          displayName: Set Version
          name: setVer

    - job: imageVersion
      displayName: 'Get image-redactor version number'
      steps:
        - bash: |
            set -eux  # exit on error
            imageVer=$(cat VERSION-IMAGE-REDACTOR)
            echo $imageVer
            echo "##vso[task.setvariable variable=imageVersion;isOutput=true]$imageVer"
          displayName: Set Image Version
          name: setImageVer

    - job: githubRelease
      displayName: GitHub Release
      dependsOn: version
      variables:
        version: $[ dependencies.Version.outputs['setVer.version'] ]
      steps:
        - task: GitHubRelease@0
          inputs:
            gitHubConnection: $(GITHUB_CONNECTION)
            tagSource: manual
            tag: $(version)

    - job: PublishToPyPi
      displayName: Publish to PyPi
      dependsOn: version
      strategy:
        matrix:
          Analyzer:
            WORKING_FOLDER: 'presidio-analyzer'
          Anonymizer:
            WORKING_FOLDER: 'presidio-anonymizer'
          Image-Redactor:
            WORKING_FOLDER: 'presidio-image-redactor'
      steps:
        - template: ./publish-to-pypi.yml
          parameters:
            WORKING_FOLDER: '$(WORKING_FOLDER)'

    - job: BuildAndPushContainers
      displayName: Build and Push Containers
      dependsOn: version
      pool:
        vmImage: 'ubuntu-16.04'
      variables:
        version: $[ dependencies.Version.outputs['setVer.version'] ]
        REGISTRY_NAME: '$(ACR_REGISTRY_NAME).azurecr.io/'
        IMAGE_PREFIX: "public/"
      steps:
        - template: ./build-and-push-containers.yml
          parameters:
            REGISTRY_NAME: $(REGISTRY_NAME)
            IMAGE_PREFIX: $(IMAGE_PREFIX)
            TAG: ":$(version)"
            AZURE_SUBSCRIPTION: $(ACR_AZURE_SUBSCRIPTION)
            DOCKER_COMPOSE_FILE: 'docker-compose-text.yml'
        - template: ./build-and-push-containers.yml
          parameters:
            REGISTRY_NAME: $(REGISTRY_NAME)
            IMAGE_PREFIX: $(IMAGE_PREFIX)
            TAG: ":latest"
            AZURE_SUBSCRIPTION: $(ACR_AZURE_SUBSCRIPTION)
            DOCKER_COMPOSE_FILE: 'docker-compose-text.yml'

    - job: BuildAndPushImageRedactorContainer
      displayName: Build and Push Image Redactor Container
      dependsOn: imageVersion
      pool:
          vmImage: 'ubuntu-16.04'
      variables:
          version: $[ dependencies.ImageVersion.outputs['setImageVer.imageVersion'] ]
          REGISTRY_NAME: '$(ACR_REGISTRY_NAME).azurecr.io/'
          IMAGE_PREFIX: 'public/'
      steps:
          - template: ./build-and-push-containers.yml
            parameters:
                REGISTRY_NAME: $(REGISTRY_NAME)
                IMAGE_PREFIX: $(IMAGE_PREFIX)
                TAG: ":$(version)"
                AZURE_SUBSCRIPTION: $(ACR_AZURE_SUBSCRIPTION)
                DOCKER_COMPOSE_FILE: 'docker-compose-image.yml'
          - template: ./build-and-push-containers.yml
            parameters:
                REGISTRY_NAME: $(REGISTRY_NAME)
                IMAGE_PREFIX: $(IMAGE_PREFIX)
                TAG: ":latest"
                AZURE_SUBSCRIPTION: $(ACR_AZURE_SUBSCRIPTION)  
                DOCKER_COMPOSE_FILE: 'docker-compose-image.yml'

  - stage: DeployProd
    dependsOn: Release
    variables:
      REGISTRY_NAME: 'mcr.microsoft.com/'
      VERSION: $[ stageDependencies.Release.version.outputs['setVer.version'] ]
    displayName: Deploy
    jobs:
      - template: ./deploy-stage.yml
        parameters:
          ENVIRONMNT_NAME: Prod
          REGISTRY_NAME: $(REGISTRY_NAME)
          AZURE_SUBSCRIPTION: $(PROD_AZURE_SUBSCRIPTION)
          ANALYZER_APP_NAME: $(ANALYZER_PROD_APP_NAME)
          ANONYMIZER_APP_NAME: $(ANONYMIZER_PROD_APP_NAME)
          IMAGE_REDACTOR_APP_NAME: $(IMAGE_REDACTOR_PROD_APP_NAME)
          RESOURCE_GROUP_NAME: $(PROD_RESOURCE_GROUP_NAME)
          TAG: "latest"
