tags:
  - Anonymizer
consumes:
  - application/json
produces:
  - application/json
summary: "Anonymize Text"
requestBody:
  $ref: "#/definitions/requestBodies/AnonymizerRequest"
  required: true

responses:
  200:
    description: OK
    content:
      application/json:
        schema:
          $ref: "#/definitions/schemas/AnonymizerResponse"
        examples:
          Replace and Redact Anonymizers:
            value:
              { "result": "hello world, my name is . My number is: ANONYMIZED" }
          Replace as default Anonymizer:
            value:
              { "result": "hello world, my name is ANONYMIZED." }
  400:
    description: Bad request
    content:
      application/json:
        schema:
          properties:
            error:
              type: string
              example: "Invalid request json"
  422:
    description: Unprocessable Entity
    content:
      application/json:
        schema:
          $ref: "#/definitions/schemas/ErrorResponse"

definitions:
  requestBodies:
    AnonymizerRequest:
      description: "The anonymization details"
      content:
        application/json:
          schema:
            type: object
            $ref: "#/definitions/schemas/AnonymizerRequest"
          examples:
            Replace and Redact Anonymizers:
              value:
                {
                  "text": "hello world, my name is Jane Doe. My number is: 034453334",
                  "anonymizers": {
                    "NAME": { "type": "redact" },
                    "PHONE_NUMBER": { "type": "replace", "new_value": "ANONYMIZED" }
                  },
                  "analyzer_results": [
                    { "start": 24, "end": 32, "score": 0.8, "entity_type": "NAME" },
                    { "start": 48, "end": 57,  "score": 0.95, "entity_type": "PHONE_NUMBER" }
                  ]
                }
            Replace as default Anonymizer:
              value:
                {
                  "text": "hello world, my name is Jane Doe.",
                  "anonymizers": {
                    "DEFAULT": { "type": "replace", "new_value": "ANONYMIZED" },
                  },
                  "analyzer_results": [
                    { "start": 24, "end": 32, "score": 0.8, "entity_type": "NAME" },
                  ]
                }

  schemas:
    AnonymizerRequest:
      required:
        - text
        - analyzer_results
      properties:
        text:
          type: string
          description: "The text to anonymize"
          example: "hello world, my name is Jane Doe. My number is: 034453334"
        anonymizers:
          description: "Object where the key is DEFAULT or the ENTITY_TYPE and the value is the anonymizer definition"
          anyOf:
            - $ref: "#/definitions/schemas/Replace"
            - $ref: "#/definitions/schemas/Redact"
            - $ref: "#/definitions/schemas/Mask"
            - $ref: "#/definitions/schemas/Hash"
          default:
            {"DEFAULT": { "type": "replace", "new_value": "<ENTITY_TYPE>" }}

        analyzer_results:
          type: array
          description: "Array of analyzer detections"
          items:
            $ref: "#/definitions/schemas/AnalyzerResult"

    AnalyzerResult:
      type: object
      required:
        - start
        - end
        - score
        - entity_type
      properties:
        start:
          type: integer
          description: "Where the PII starts"
          example: 24
        end:
          type: integer
          description: "Where the PII ends"
          example: 32
        score:
          type: number
          format: double
          description: "The PII detection score"
          example: 0.8
        entity_type:
          description: "The PII detection type"
          $ref: "#/definitions/schemas/EntityTypes"

    EntityTypes:
      type: string
      enum:
        - CREDIT_CARD
        - CRYPTO
        - DATE_TIME
        - DOMAIN_NAME
        - EMAIL_ADDRESS
        - IBAN_CODE
        - IP_ADDRESS
        - NRP
        - LOCATION
        - PERSON
        - PHONE_NUMBER
        - US_BANK_NUMBER
        - US_DRIVER_LICENSE
        - US_ITIN
        - US_PASSPORT
        - US_SSN
        - UK_NHS
        - NIF
        - FIN/NRIC
      example: NAME

    Replace:
      title: Replace
      description: "Replace with a given value"
      type: object
      required:
        - type
        - new_value
      properties:
        type:
          type: string
          description: "replace"
          example: replace
        new_value:
          type: string
          description: "The string to replace with"
          example: VALUE

    Redact:
      title: Redact
      description: "Replace with an empty string"
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: "redact"
          example: redact

    Mask:
      title: Mask
      description: "Replace with a given character"
      type: object
      required:
        - type
        - masking_char
        - chars_to_mask
      properties:
        type:
          type: string
          description: "mask"
          example: mask
        masking_char:
          type: string
          description: "The replacement character"
          example: "*"
        chars_to_mask:
          type: integer
          description: "The amount of characters that should be replaced"
          example: 4
        from_end:
          type: boolean
          description: "Whether to mask the PII from it's end"
          example: true
          default: false

    Hash:
      title: Hash
      description: "Replace with hashed value"
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: "hash"
          example: hash
        hash_type:
          type: string
          description: "The hashing algorithm"
          enum:
            - md5
            - sha256
            - sha512
          example: md5
          default: md5

    AnonymizerResponse:
      type: object
      properties:
        result:
          type: string

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Invalid input, text can not be empty"
