site_name: Microsoft Presidio
site_url: https://microsoft.github.io/presidio
site_description: PII anonymization for text, images, and structured data.
site_author: Microsoft

repo_url: https://github.com/microsoft/presidio/
edit_uri: ""

nav:
  - Presidio: 
    - Home: index.md
    - Installation: installation.md
    - FAQ: faq.md
  - Quick start: 
    - Home: getting_started.md
    - Text: getting_started/getting_started_text.md
    - Images: getting_started/getting_started_images.md
    - Semi/Structured data: getting_started/getting_started_structured.md
  - Learn Presidio:
      - Home: learn_presidio/index.md
      - Concepts: learn_presidio/concepts.md
      - Tutorial: 
        - Home: tutorial/index.md
        - Getting started: tutorial/00_getting_started.md
        - Deny-list recognizers: tutorial/01_deny_list.md
        - Regex recognizers: tutorial/02_regex.md
        - Rule-based recognizers: tutorial/03_rule_based.md
        - Additional models/languages: tutorial/05_languages.md
        - External services: tutorial/04_external_services.md
        - Context enhancement: tutorial/06_context.md
        - Decision process: tutorial/07_decision_process.md
        - No-code recognizers: tutorial/08_no_code.md
        - Ad-hoc recognizers: tutorial/09_ad_hoc.md
        - Simple anonymization: tutorial/10_simple_anonymization.md
        - Custom anonymization: tutorial/11_custom_anonymization.md
        - Encryption/Decryption: tutorial/12_encryption.md
        - Allow-lists: tutorial/13_allow_list.md
      - Text de-identification:
          - Home: text_anonymization.md
          - Presidio Analyzer:
              - Home: analyzer/index.md
              - Developing PII recognizers:
                  - Tutorial: analyzer/adding_recognizers.md
                  - Best practices: analyzer/developing_recognizers.md
                  - Recognizer registry from file: analyzer/recognizer_registry_provider.md
              - Multi-language support: analyzer/languages.md
              - Customizing the NLP model:
                  - Home: analyzer/customizing_nlp_models.md
                  - Spacy/Stanza: analyzer/nlp_engines/spacy_stanza.md
                  - Transformers: analyzer/nlp_engines/transformers.md
              - Tracing the decision process: analyzer/decision_process.md
              - Configure from file: analyzer/analyzer_engine_provider.md
          - Presidio Anonymizer:
              - Home: anonymizer/index.md
              - Developing PII anonymization operators: anonymizer/adding_operators.md
      - Image de-identification:
          - Home: image-redactor/index.md
          - Evaluating DICOM redaction: image-redactor/evaluating_dicom_redaction.md
      - Structured and Semi-structured:
          - Home: structured/index.md
      - PII detection evaluation: evaluation/index.md
  - Resources:
      - Supported entities: supported_entities.md
      - Community: community.md
      - Change log: https://github.com/microsoft/presidio/blob/main/CHANGELOG.md
      - Setting up a development environment: development.md
      - Build and release process: build_release.md
      - Changes from V1 to V2: presidio_V2.md
      - Python API reference:
          - Home: api.md
          - Presidio Analyzer Python API: api/analyzer_python.md
          - Presidio Anonymizer Python API: api/anonymizer_python.md
          - Presidio Image Redactor Python API: api/image_redactor_python.md
          - Presidio Structured Python API: api/structured_python.md
      - REST API reference: https://microsoft.github.io/presidio/api-docs/api-docs.html" target="_blank
  - Samples:
    - Usage:
      - Home: samples/index.md
      - Text:
        - Presidio Basic Usage Notebook: samples/python/presidio_notebook.ipynb
        - Customizing Presidio Analyzer: samples/python/customizing_presidio_analyzer.ipynb
        - Configuring The NLP engine: samples/python/ner_model_configuration.ipynb
        - Encrypting and Decrypting identified entities: samples/python/encrypt_decrypt.ipynb
        - Getting the identified entity value using a custom Operator: samples/python/getting_entity_values.ipynb
        - Anonymizing known values: samples/python/Anonymizing known values.ipynb
        - Keeping some entities from being anonymized: samples/python/keep_entities.ipynb
        - Integrating with external services: samples/python/integrating_with_external_services.ipynb
        - Remote Recognizer: samples/python/example_remote_recognizer.py
        - Azure AI Language as a Remote Recognizer: samples/python/text_analytics/index.md
        - Using Flair as an external PII model: samples/python/flair_recognizer.py
        - Using Span Marker as an external PII model: samples/python/span_marker_recognizer.py
        - Using Transformers as an external PII model: samples/python/transformers_recognizer/index.md
        - Pseudonymization (replace PII values using mappings): samples/python/pseudonymization.ipynb
        - Passing a lambda as a Presidio anonymizer using Faker: samples/python/example_custom_lambda_anonymizer.py
        - Synthetic data generation with OpenAI: samples/python/synth_data_with_openai.ipynb
        - YAML based no-code configuration: samples/python/no_code_config.ipynb
      - Data:
        - Analyzing structured / semi-structured data in batch: samples/python/batch_processing.ipynb
        - Presidio Structured Basic Usage Notebook: samples/python/example_structured.ipynb
        - Analyze and Anonymize CSV file: samples/python/process_csv_file.py
      - Images:
        - Redacting Text PII from DICOM images: samples/python/example_dicom_image_redactor.ipynb
        - Using an allow list with image redaction: samples/python/image_redaction_allow_list_approach.ipynb
        - Plot custom bounding boxes: samples/python/plot_custom_bboxes.ipynb
        - Example DICOM redaction evaluation: samples/python/example_dicom_redactor_evaluation.ipynb
      - PDF:
        - Annotating PII in a PDF: samples/python/example_pdf_annotation.ipynb
      - Deployment:
        - Presidio with App Service: samples/deployments/app-service/index.md
        - Presidio with Kubernetes: samples/deployments/k8s/index.md
        - Presidio with Spark: samples/deployments/spark/index.md
        - Azure Data Factory:
          - ETL using AppService/Databricks: samples/deployments/data-factory/presidio-data-factory.md
          - Add Presidio as an HTTP service to your Azure Data Factory: samples/deployments/data-factory/presidio-data-factory-template-gallery-http.md
          - Add Presidio on Databricks to your Azure Data Factory: samples/deployments/data-factory/presidio-data-factory-template-gallery-databricks.md
        - PII Masking LLM calls using LiteLLM proxy: samples/docker/litellm.md
      - Demo:
        - Create a simple demo app using Streamlit: samples/python/streamlit/index.md
not_in_nav : |
  design.md
  samples/deployments/index.md
  samples/deployments/data-factory/index.md
  samples/deployments/spark/notebooks/00_setup.py
  samples/deployments/spark/notebooks/01_transform_presidio.py
  samples/docker/index.md
  samples/python/custom_presidio.py
  samples/python/simple_anonymization_example.py
  samples/python/streamlit/azure_ai_language_wrapper.py
  samples/python/streamlit/flair_recognizer.py
  samples/python/streamlit/openai_fake_data_generator.py
  samples/python/streamlit/presidio_helpers.py
  samples/python/streamlit/presidio_nlp_engine_config.py
  samples/python/streamlit/presidio_streamlit.py
  samples/python/streamlit/test_streamlit.py
  samples/python/text_analytics/__init__.py
  samples/python/transformers_recognizer/__init__.py
  samples/python/transformers_recognizer/configuration.py
  samples/python/transformers_recognizer/transformer_recognizer.py

theme:
  name: material
  custom_dir: overrides
  palette:
      scheme: default
      primary: blue grey
      accent: indigo
  font:
    text: Roboto
    code: Roboto Mono
  hide:
    - toc
  logo: assets/ms_icon.png
  favicon: assets/ms_icon.png
  features:
    - navigation.instant
    - content.tabs.link
    - navigation.tabs
    - navigation.tabs.sticky
plugins:
  - search
  - mkdocstrings:
      handlers:
        python:
          options:
            docstring_style: sphinx
            docstring_section_style: spacy
            show_root_heading: true
            show_submodules: true
            show_bases: true
            merge_init_into_class: false
            group_by_category: false
            inherited_members: true
            members_order: source
            show_signature: true
            line_length: 80
            separate_signature: true
            show_signature_annotations: true
            show_docstring_examples: true
            summary:
              attributes: false
              functions: true
              modules: false
            filters:
              - "!^_"
  - mkdocs-jupyter:
      ignore_h1_titles: True

extra:
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/microsoft/presidio
    - icon: fontawesome/brands/docker
      link: https://hub.docker.com/_/microsoft-presidio
    - icon: fontawesome/solid/envelope
      link: mailto:presidio@microsoft.com

markdown_extensions:
  - meta
  - admonition
  - pymdownx.highlight
  - pymdownx.superfences
  - pymdownx.pathconverter
  - pymdownx.tabbed:
      alternate_style: true 
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
